syntax = "proto3";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

package swapi;

message Film {
  string title = 1;
  int32 episode_id = 2;
  string opening_crawl = 3;
  string director = 4;
  string producer = 5;
  string release_date = 6;
  repeated string characters = 7;
  repeated string planets = 8;
  repeated string starships = 9;
  repeated string vehicles = 10;
  repeated string species = 11;
  string id = 12;
}

message Starship {
  string name = 1;
  string model = 2;
  string manufacturer = 3;
  int32 cost_in_credits = 4;
  float length = 5;
  int32 crew = 6;
  int32 passengers = 7;
  int32 cargo_capacity = 8;
  string consumables = 9;
  int32 hyperdrive_rating = 10;
  int32 mglt = 11;
  string starship_class = 12;
  repeated string pilots = 13;
  repeated string films = 14;
  string id = 15;
}

message Vehicle {
  string name = 1;
  string model = 2;
  string manufacturer = 3;
  int32 cost_in_credits = 4;
  float length = 5;
  int32 max_atmosphering_speed = 6;
  int32 crew = 7;
  int32 passengers = 8;
  int32 cargo_capacity = 9;
  string consumables = 10;
  string vehicle_class = 11;
  repeated string pilots = 12;
  repeated string films = 13;
  string id = 14;
}

message Species {
  string name = 1;
  string classification = 2;
  string designation = 3;
  int32 average_height = 4;
  string skin_colors = 5;
  string eye_colors = 6;
  int32 average_lifespan = 7;
  string homeworld = 8;
  string language = 9;
  repeated string people = 10;
  repeated string films = 11;
  string id = 12;
}

message Planet {
  string name = 1;
  int32 rotation_period = 2;
  int32 orbital_period = 3;
  int32 diameter = 4;
  string climate = 5;
  float gravity = 6;
  string terrain = 7;
  int32 surface_water = 8;
  int32 population = 9;
  repeated string residents = 10;
  repeated string films = 11;
  string id = 12;
}

message Person {
  string name = 1;
  int32 height = 2;
  float mass = 3;
  string hair_color = 4;
  string skin_color = 5;
  string eye_color = 6;
  string birth_year = 7;
  string gender = 8;
  string homeworld = 9;
  repeated string films = 10;
  repeated string species = 11;
  repeated string vehicles = 12;
  repeated string starships = 13;
  string id = 14;
}


message Reference {
  string id = 1;
}

message FilmsList {
  repeated Film results = 1;
}

message StarshipsList {
  repeated Starship results = 1;
}

message VehiclesList {
  repeated Vehicle results = 1;
}

message SpeciesList {
  repeated Species results = 1;
}

message PlanetsList {
  repeated Planet results = 1;
}

message PeopleList {
  repeated Person results = 1;
}

service Starwars {
  rpc GetFilm(Reference) returns (Film) {
    option (google.api.http) = {
       get: "/swapi/v1/film/{id}"
    };
  }
  rpc ListFilms(google.protobuf.Empty) returns (FilmsList) {
    option (google.api.http) = {
       get: "/swapi/v1/films"
    };
  }

  rpc GetStarship(Reference) returns (Starship) {
    option (google.api.http) = {
       get: "/swapi/v1/starship/{id}"
    };
  }
  rpc ListStarships(google.protobuf.Empty) returns (StarshipsList) {
    option (google.api.http) = {
       get: "/swapi/v1/starships"
    };
  }

  rpc GetVehicle(Reference) returns (Vehicle) {
    option (google.api.http) = {
       get: "/swapi/v1/vehicle/{id}"
    };
  }
  rpc ListVehicles(google.protobuf.Empty) returns (VehiclesList) {
    option (google.api.http) = {
       get: "/swapi/v1/vehicles"
    };
  }

  rpc GetSpecies(Reference) returns (Species) {
    option (google.api.http) = {
       get: "/swapi/v1/species/{id}"
    };
  }
  rpc ListSpecies(google.protobuf.Empty) returns (SpeciesList) {
    option (google.api.http) = {
       get: "/swapi/v1/species"
    };
  }

  rpc GetPlanet(Reference) returns (Planet) {
    option (google.api.http) = {
       get: "/swapi/v1/planet/{id}"
    };
  }
  rpc ListPlanets(google.protobuf.Empty) returns (PlanetsList) {
    option (google.api.http) = {
       get: "/swapi/v1/planets"
    };
  }

  rpc GetPerson(Reference) returns (Person) {
    option (google.api.http) = {
       get: "/swapi/v1/person/{id}"
    };
  }
  rpc ListPeople(google.protobuf.Empty) returns (PeopleList) {
    option (google.api.http) = {
       get: "/swapi/v1/people"
    };
  }

}