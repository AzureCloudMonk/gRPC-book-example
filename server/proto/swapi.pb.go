// Code generated by protoc-gen-go. DO NOT EDIT.
// source: swapi.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Film struct {
	Title        string   `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	EpisodeId    int32    `protobuf:"varint,2,opt,name=episode_id,json=episodeId" json:"episode_id,omitempty"`
	OpeningCrawl string   `protobuf:"bytes,3,opt,name=opening_crawl,json=openingCrawl" json:"opening_crawl,omitempty"`
	Director     string   `protobuf:"bytes,4,opt,name=director" json:"director,omitempty"`
	Producer     string   `protobuf:"bytes,5,opt,name=producer" json:"producer,omitempty"`
	ReleaseDate  string   `protobuf:"bytes,6,opt,name=release_date,json=releaseDate" json:"release_date,omitempty"`
	Characters   []string `protobuf:"bytes,7,rep,name=characters" json:"characters,omitempty"`
	Planets      []string `protobuf:"bytes,8,rep,name=planets" json:"planets,omitempty"`
	Starships    []string `protobuf:"bytes,9,rep,name=starships" json:"starships,omitempty"`
	Vehicles     []string `protobuf:"bytes,10,rep,name=vehicles" json:"vehicles,omitempty"`
	Species      []string `protobuf:"bytes,11,rep,name=species" json:"species,omitempty"`
	Id           string   `protobuf:"bytes,12,opt,name=id" json:"id,omitempty"`
}

func (m *Film) Reset()                    { *m = Film{} }
func (m *Film) String() string            { return proto1.CompactTextString(m) }
func (*Film) ProtoMessage()               {}
func (*Film) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Film) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Film) GetEpisodeId() int32 {
	if m != nil {
		return m.EpisodeId
	}
	return 0
}

func (m *Film) GetOpeningCrawl() string {
	if m != nil {
		return m.OpeningCrawl
	}
	return ""
}

func (m *Film) GetDirector() string {
	if m != nil {
		return m.Director
	}
	return ""
}

func (m *Film) GetProducer() string {
	if m != nil {
		return m.Producer
	}
	return ""
}

func (m *Film) GetReleaseDate() string {
	if m != nil {
		return m.ReleaseDate
	}
	return ""
}

func (m *Film) GetCharacters() []string {
	if m != nil {
		return m.Characters
	}
	return nil
}

func (m *Film) GetPlanets() []string {
	if m != nil {
		return m.Planets
	}
	return nil
}

func (m *Film) GetStarships() []string {
	if m != nil {
		return m.Starships
	}
	return nil
}

func (m *Film) GetVehicles() []string {
	if m != nil {
		return m.Vehicles
	}
	return nil
}

func (m *Film) GetSpecies() []string {
	if m != nil {
		return m.Species
	}
	return nil
}

func (m *Film) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetFilmRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetFilmRequest) Reset()                    { *m = GetFilmRequest{} }
func (m *GetFilmRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetFilmRequest) ProtoMessage()               {}
func (*GetFilmRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *GetFilmRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetFilmResponse struct {
	Film *Film `protobuf:"bytes,1,opt,name=film" json:"film,omitempty"`
}

func (m *GetFilmResponse) Reset()                    { *m = GetFilmResponse{} }
func (m *GetFilmResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetFilmResponse) ProtoMessage()               {}
func (*GetFilmResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *GetFilmResponse) GetFilm() *Film {
	if m != nil {
		return m.Film
	}
	return nil
}

type ListFilmsRequest struct {
}

func (m *ListFilmsRequest) Reset()                    { *m = ListFilmsRequest{} }
func (m *ListFilmsRequest) String() string            { return proto1.CompactTextString(m) }
func (*ListFilmsRequest) ProtoMessage()               {}
func (*ListFilmsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

type ListFilmsResponse struct {
	Films []*Film `protobuf:"bytes,1,rep,name=films" json:"films,omitempty"`
}

func (m *ListFilmsResponse) Reset()                    { *m = ListFilmsResponse{} }
func (m *ListFilmsResponse) String() string            { return proto1.CompactTextString(m) }
func (*ListFilmsResponse) ProtoMessage()               {}
func (*ListFilmsResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *ListFilmsResponse) GetFilms() []*Film {
	if m != nil {
		return m.Films
	}
	return nil
}

type Vehicle struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Model                string   `protobuf:"bytes,2,opt,name=model" json:"model,omitempty"`
	Manufacturer         string   `protobuf:"bytes,3,opt,name=manufacturer" json:"manufacturer,omitempty"`
	CostInCredits        int32    `protobuf:"varint,4,opt,name=cost_in_credits,json=costInCredits" json:"cost_in_credits,omitempty"`
	Length               float32  `protobuf:"fixed32,5,opt,name=length" json:"length,omitempty"`
	MaxAtmospheringSpeed int32    `protobuf:"varint,6,opt,name=max_atmosphering_speed,json=maxAtmospheringSpeed" json:"max_atmosphering_speed,omitempty"`
	Crew                 int32    `protobuf:"varint,7,opt,name=crew" json:"crew,omitempty"`
	Passengers           int32    `protobuf:"varint,8,opt,name=passengers" json:"passengers,omitempty"`
	CargoCapacity        int32    `protobuf:"varint,9,opt,name=cargo_capacity,json=cargoCapacity" json:"cargo_capacity,omitempty"`
	Consumables          string   `protobuf:"bytes,10,opt,name=consumables" json:"consumables,omitempty"`
	VehicleClass         string   `protobuf:"bytes,11,opt,name=vehicle_class,json=vehicleClass" json:"vehicle_class,omitempty"`
	Pilots               []string `protobuf:"bytes,12,rep,name=pilots" json:"pilots,omitempty"`
	Films                []string `protobuf:"bytes,13,rep,name=films" json:"films,omitempty"`
	Id                   string   `protobuf:"bytes,14,opt,name=id" json:"id,omitempty"`
}

func (m *Vehicle) Reset()                    { *m = Vehicle{} }
func (m *Vehicle) String() string            { return proto1.CompactTextString(m) }
func (*Vehicle) ProtoMessage()               {}
func (*Vehicle) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *Vehicle) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Vehicle) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *Vehicle) GetManufacturer() string {
	if m != nil {
		return m.Manufacturer
	}
	return ""
}

func (m *Vehicle) GetCostInCredits() int32 {
	if m != nil {
		return m.CostInCredits
	}
	return 0
}

func (m *Vehicle) GetLength() float32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *Vehicle) GetMaxAtmospheringSpeed() int32 {
	if m != nil {
		return m.MaxAtmospheringSpeed
	}
	return 0
}

func (m *Vehicle) GetCrew() int32 {
	if m != nil {
		return m.Crew
	}
	return 0
}

func (m *Vehicle) GetPassengers() int32 {
	if m != nil {
		return m.Passengers
	}
	return 0
}

func (m *Vehicle) GetCargoCapacity() int32 {
	if m != nil {
		return m.CargoCapacity
	}
	return 0
}

func (m *Vehicle) GetConsumables() string {
	if m != nil {
		return m.Consumables
	}
	return ""
}

func (m *Vehicle) GetVehicleClass() string {
	if m != nil {
		return m.VehicleClass
	}
	return ""
}

func (m *Vehicle) GetPilots() []string {
	if m != nil {
		return m.Pilots
	}
	return nil
}

func (m *Vehicle) GetFilms() []string {
	if m != nil {
		return m.Films
	}
	return nil
}

func (m *Vehicle) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetVehicleRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetVehicleRequest) Reset()                    { *m = GetVehicleRequest{} }
func (m *GetVehicleRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetVehicleRequest) ProtoMessage()               {}
func (*GetVehicleRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *GetVehicleRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetVehicleResponse struct {
	Vehicle *Vehicle `protobuf:"bytes,1,opt,name=vehicle" json:"vehicle,omitempty"`
}

func (m *GetVehicleResponse) Reset()                    { *m = GetVehicleResponse{} }
func (m *GetVehicleResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetVehicleResponse) ProtoMessage()               {}
func (*GetVehicleResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *GetVehicleResponse) GetVehicle() *Vehicle {
	if m != nil {
		return m.Vehicle
	}
	return nil
}

type ListVehiclesRequest struct {
}

func (m *ListVehiclesRequest) Reset()                    { *m = ListVehiclesRequest{} }
func (m *ListVehiclesRequest) String() string            { return proto1.CompactTextString(m) }
func (*ListVehiclesRequest) ProtoMessage()               {}
func (*ListVehiclesRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

type ListVehiclesResponse struct {
	Vehicles []*Vehicle `protobuf:"bytes,1,rep,name=vehicles" json:"vehicles,omitempty"`
}

func (m *ListVehiclesResponse) Reset()                    { *m = ListVehiclesResponse{} }
func (m *ListVehiclesResponse) String() string            { return proto1.CompactTextString(m) }
func (*ListVehiclesResponse) ProtoMessage()               {}
func (*ListVehiclesResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *ListVehiclesResponse) GetVehicles() []*Vehicle {
	if m != nil {
		return m.Vehicles
	}
	return nil
}

type Starship struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Model                string   `protobuf:"bytes,2,opt,name=model" json:"model,omitempty"`
	Manufacturer         string   `protobuf:"bytes,3,opt,name=manufacturer" json:"manufacturer,omitempty"`
	CostInCredits        int64    `protobuf:"varint,4,opt,name=cost_in_credits,json=costInCredits" json:"cost_in_credits,omitempty"`
	Length               float32  `protobuf:"fixed32,5,opt,name=length" json:"length,omitempty"`
	Crew                 int32    `protobuf:"varint,6,opt,name=crew" json:"crew,omitempty"`
	Passengers           int32    `protobuf:"varint,7,opt,name=passengers" json:"passengers,omitempty"`
	CargoCapacity        int64    `protobuf:"varint,8,opt,name=cargo_capacity,json=cargoCapacity" json:"cargo_capacity,omitempty"`
	Consumables          string   `protobuf:"bytes,9,opt,name=consumables" json:"consumables,omitempty"`
	HyperdriveRating     float32  `protobuf:"fixed32,10,opt,name=hyperdrive_rating,json=hyperdriveRating" json:"hyperdrive_rating,omitempty"`
	Mglt                 int32    `protobuf:"varint,11,opt,name=mglt" json:"mglt,omitempty"`
	StarshipClass        string   `protobuf:"bytes,12,opt,name=starship_class,json=starshipClass" json:"starship_class,omitempty"`
	Pilots               []string `protobuf:"bytes,13,rep,name=pilots" json:"pilots,omitempty"`
	Films                []string `protobuf:"bytes,14,rep,name=films" json:"films,omitempty"`
	Id                   string   `protobuf:"bytes,15,opt,name=id" json:"id,omitempty"`
	MaxAtmospheringSpeed int64    `protobuf:"varint,16,opt,name=max_atmosphering_speed,json=maxAtmospheringSpeed" json:"max_atmosphering_speed,omitempty"`
}

func (m *Starship) Reset()                    { *m = Starship{} }
func (m *Starship) String() string            { return proto1.CompactTextString(m) }
func (*Starship) ProtoMessage()               {}
func (*Starship) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *Starship) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Starship) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *Starship) GetManufacturer() string {
	if m != nil {
		return m.Manufacturer
	}
	return ""
}

func (m *Starship) GetCostInCredits() int64 {
	if m != nil {
		return m.CostInCredits
	}
	return 0
}

func (m *Starship) GetLength() float32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *Starship) GetCrew() int32 {
	if m != nil {
		return m.Crew
	}
	return 0
}

func (m *Starship) GetPassengers() int32 {
	if m != nil {
		return m.Passengers
	}
	return 0
}

func (m *Starship) GetCargoCapacity() int64 {
	if m != nil {
		return m.CargoCapacity
	}
	return 0
}

func (m *Starship) GetConsumables() string {
	if m != nil {
		return m.Consumables
	}
	return ""
}

func (m *Starship) GetHyperdriveRating() float32 {
	if m != nil {
		return m.HyperdriveRating
	}
	return 0
}

func (m *Starship) GetMglt() int32 {
	if m != nil {
		return m.Mglt
	}
	return 0
}

func (m *Starship) GetStarshipClass() string {
	if m != nil {
		return m.StarshipClass
	}
	return ""
}

func (m *Starship) GetPilots() []string {
	if m != nil {
		return m.Pilots
	}
	return nil
}

func (m *Starship) GetFilms() []string {
	if m != nil {
		return m.Films
	}
	return nil
}

func (m *Starship) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Starship) GetMaxAtmospheringSpeed() int64 {
	if m != nil {
		return m.MaxAtmospheringSpeed
	}
	return 0
}

type GetStarshipRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetStarshipRequest) Reset()                    { *m = GetStarshipRequest{} }
func (m *GetStarshipRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetStarshipRequest) ProtoMessage()               {}
func (*GetStarshipRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *GetStarshipRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetStarshipResponse struct {
	Starship *Starship `protobuf:"bytes,1,opt,name=starship" json:"starship,omitempty"`
}

func (m *GetStarshipResponse) Reset()                    { *m = GetStarshipResponse{} }
func (m *GetStarshipResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetStarshipResponse) ProtoMessage()               {}
func (*GetStarshipResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *GetStarshipResponse) GetStarship() *Starship {
	if m != nil {
		return m.Starship
	}
	return nil
}

type ListStarshipsRequest struct {
}

func (m *ListStarshipsRequest) Reset()                    { *m = ListStarshipsRequest{} }
func (m *ListStarshipsRequest) String() string            { return proto1.CompactTextString(m) }
func (*ListStarshipsRequest) ProtoMessage()               {}
func (*ListStarshipsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

type ListStarshipsResponse struct {
	Starships []*Starship `protobuf:"bytes,1,rep,name=starships" json:"starships,omitempty"`
}

func (m *ListStarshipsResponse) Reset()                    { *m = ListStarshipsResponse{} }
func (m *ListStarshipsResponse) String() string            { return proto1.CompactTextString(m) }
func (*ListStarshipsResponse) ProtoMessage()               {}
func (*ListStarshipsResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14} }

func (m *ListStarshipsResponse) GetStarships() []*Starship {
	if m != nil {
		return m.Starships
	}
	return nil
}

type Species struct {
	Name            string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Classification  string   `protobuf:"bytes,2,opt,name=classification" json:"classification,omitempty"`
	Designation     string   `protobuf:"bytes,3,opt,name=designation" json:"designation,omitempty"`
	AverageHeight   int32    `protobuf:"varint,4,opt,name=average_height,json=averageHeight" json:"average_height,omitempty"`
	SkinColors      string   `protobuf:"bytes,5,opt,name=skin_colors,json=skinColors" json:"skin_colors,omitempty"`
	EyeColors       string   `protobuf:"bytes,6,opt,name=eye_colors,json=eyeColors" json:"eye_colors,omitempty"`
	AverageLifespan int32    `protobuf:"varint,7,opt,name=average_lifespan,json=averageLifespan" json:"average_lifespan,omitempty"`
	Homeworld       string   `protobuf:"bytes,8,opt,name=homeworld" json:"homeworld,omitempty"`
	Language        string   `protobuf:"bytes,9,opt,name=language" json:"language,omitempty"`
	People          []string `protobuf:"bytes,10,rep,name=people" json:"people,omitempty"`
	Films           []string `protobuf:"bytes,11,rep,name=films" json:"films,omitempty"`
	Id              string   `protobuf:"bytes,12,opt,name=id" json:"id,omitempty"`
	HairColors      string   `protobuf:"bytes,13,opt,name=hair_colors,json=hairColors" json:"hair_colors,omitempty"`
}

func (m *Species) Reset()                    { *m = Species{} }
func (m *Species) String() string            { return proto1.CompactTextString(m) }
func (*Species) ProtoMessage()               {}
func (*Species) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{15} }

func (m *Species) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Species) GetClassification() string {
	if m != nil {
		return m.Classification
	}
	return ""
}

func (m *Species) GetDesignation() string {
	if m != nil {
		return m.Designation
	}
	return ""
}

func (m *Species) GetAverageHeight() int32 {
	if m != nil {
		return m.AverageHeight
	}
	return 0
}

func (m *Species) GetSkinColors() string {
	if m != nil {
		return m.SkinColors
	}
	return ""
}

func (m *Species) GetEyeColors() string {
	if m != nil {
		return m.EyeColors
	}
	return ""
}

func (m *Species) GetAverageLifespan() int32 {
	if m != nil {
		return m.AverageLifespan
	}
	return 0
}

func (m *Species) GetHomeworld() string {
	if m != nil {
		return m.Homeworld
	}
	return ""
}

func (m *Species) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *Species) GetPeople() []string {
	if m != nil {
		return m.People
	}
	return nil
}

func (m *Species) GetFilms() []string {
	if m != nil {
		return m.Films
	}
	return nil
}

func (m *Species) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Species) GetHairColors() string {
	if m != nil {
		return m.HairColors
	}
	return ""
}

type GetSpeciesRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetSpeciesRequest) Reset()                    { *m = GetSpeciesRequest{} }
func (m *GetSpeciesRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetSpeciesRequest) ProtoMessage()               {}
func (*GetSpeciesRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{16} }

func (m *GetSpeciesRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetSpeciesResponse struct {
	Species *Species `protobuf:"bytes,1,opt,name=species" json:"species,omitempty"`
}

func (m *GetSpeciesResponse) Reset()                    { *m = GetSpeciesResponse{} }
func (m *GetSpeciesResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetSpeciesResponse) ProtoMessage()               {}
func (*GetSpeciesResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{17} }

func (m *GetSpeciesResponse) GetSpecies() *Species {
	if m != nil {
		return m.Species
	}
	return nil
}

type ListSpeciesRequest struct {
}

func (m *ListSpeciesRequest) Reset()                    { *m = ListSpeciesRequest{} }
func (m *ListSpeciesRequest) String() string            { return proto1.CompactTextString(m) }
func (*ListSpeciesRequest) ProtoMessage()               {}
func (*ListSpeciesRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{18} }

type ListSpeciesResponse struct {
	Species []*Species `protobuf:"bytes,1,rep,name=species" json:"species,omitempty"`
}

func (m *ListSpeciesResponse) Reset()                    { *m = ListSpeciesResponse{} }
func (m *ListSpeciesResponse) String() string            { return proto1.CompactTextString(m) }
func (*ListSpeciesResponse) ProtoMessage()               {}
func (*ListSpeciesResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{19} }

func (m *ListSpeciesResponse) GetSpecies() []*Species {
	if m != nil {
		return m.Species
	}
	return nil
}

type Planet struct {
	Name           string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	RotationPeriod int32    `protobuf:"varint,2,opt,name=rotation_period,json=rotationPeriod" json:"rotation_period,omitempty"`
	OrbitalPeriod  int32    `protobuf:"varint,3,opt,name=orbital_period,json=orbitalPeriod" json:"orbital_period,omitempty"`
	Diameter       int32    `protobuf:"varint,4,opt,name=diameter" json:"diameter,omitempty"`
	Climate        string   `protobuf:"bytes,5,opt,name=climate" json:"climate,omitempty"`
	Gravity        float32  `protobuf:"fixed32,6,opt,name=gravity" json:"gravity,omitempty"`
	Terrain        string   `protobuf:"bytes,7,opt,name=terrain" json:"terrain,omitempty"`
	SurfaceWater   float32  `protobuf:"fixed32,8,opt,name=surface_water,json=surfaceWater" json:"surface_water,omitempty"`
	Population     int64    `protobuf:"varint,9,opt,name=population" json:"population,omitempty"`
	Residents      []string `protobuf:"bytes,10,rep,name=residents" json:"residents,omitempty"`
	Films          []string `protobuf:"bytes,11,rep,name=films" json:"films,omitempty"`
	Id             string   `protobuf:"bytes,12,opt,name=id" json:"id,omitempty"`
}

func (m *Planet) Reset()                    { *m = Planet{} }
func (m *Planet) String() string            { return proto1.CompactTextString(m) }
func (*Planet) ProtoMessage()               {}
func (*Planet) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{20} }

func (m *Planet) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Planet) GetRotationPeriod() int32 {
	if m != nil {
		return m.RotationPeriod
	}
	return 0
}

func (m *Planet) GetOrbitalPeriod() int32 {
	if m != nil {
		return m.OrbitalPeriod
	}
	return 0
}

func (m *Planet) GetDiameter() int32 {
	if m != nil {
		return m.Diameter
	}
	return 0
}

func (m *Planet) GetClimate() string {
	if m != nil {
		return m.Climate
	}
	return ""
}

func (m *Planet) GetGravity() float32 {
	if m != nil {
		return m.Gravity
	}
	return 0
}

func (m *Planet) GetTerrain() string {
	if m != nil {
		return m.Terrain
	}
	return ""
}

func (m *Planet) GetSurfaceWater() float32 {
	if m != nil {
		return m.SurfaceWater
	}
	return 0
}

func (m *Planet) GetPopulation() int64 {
	if m != nil {
		return m.Population
	}
	return 0
}

func (m *Planet) GetResidents() []string {
	if m != nil {
		return m.Residents
	}
	return nil
}

func (m *Planet) GetFilms() []string {
	if m != nil {
		return m.Films
	}
	return nil
}

func (m *Planet) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetPlanetRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetPlanetRequest) Reset()                    { *m = GetPlanetRequest{} }
func (m *GetPlanetRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetPlanetRequest) ProtoMessage()               {}
func (*GetPlanetRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{21} }

func (m *GetPlanetRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetPlanetResponse struct {
	Planet *Planet `protobuf:"bytes,1,opt,name=planet" json:"planet,omitempty"`
}

func (m *GetPlanetResponse) Reset()                    { *m = GetPlanetResponse{} }
func (m *GetPlanetResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetPlanetResponse) ProtoMessage()               {}
func (*GetPlanetResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{22} }

func (m *GetPlanetResponse) GetPlanet() *Planet {
	if m != nil {
		return m.Planet
	}
	return nil
}

type ListPlanetsRequest struct {
}

func (m *ListPlanetsRequest) Reset()                    { *m = ListPlanetsRequest{} }
func (m *ListPlanetsRequest) String() string            { return proto1.CompactTextString(m) }
func (*ListPlanetsRequest) ProtoMessage()               {}
func (*ListPlanetsRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{23} }

type ListPlanetsResponse struct {
	Results []*Planet `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
}

func (m *ListPlanetsResponse) Reset()                    { *m = ListPlanetsResponse{} }
func (m *ListPlanetsResponse) String() string            { return proto1.CompactTextString(m) }
func (*ListPlanetsResponse) ProtoMessage()               {}
func (*ListPlanetsResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{24} }

func (m *ListPlanetsResponse) GetResults() []*Planet {
	if m != nil {
		return m.Results
	}
	return nil
}

type Person struct {
	Name      string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Height    int32    `protobuf:"varint,2,opt,name=height" json:"height,omitempty"`
	Mass      float32  `protobuf:"fixed32,3,opt,name=mass" json:"mass,omitempty"`
	HairColor string   `protobuf:"bytes,4,opt,name=hair_color,json=hairColor" json:"hair_color,omitempty"`
	SkinColor string   `protobuf:"bytes,5,opt,name=skin_color,json=skinColor" json:"skin_color,omitempty"`
	EyeColor  string   `protobuf:"bytes,6,opt,name=eye_color,json=eyeColor" json:"eye_color,omitempty"`
	BirthYear string   `protobuf:"bytes,7,opt,name=birth_year,json=birthYear" json:"birth_year,omitempty"`
	Gender    string   `protobuf:"bytes,8,opt,name=gender" json:"gender,omitempty"`
	Homeworld string   `protobuf:"bytes,9,opt,name=homeworld" json:"homeworld,omitempty"`
	Films     []string `protobuf:"bytes,10,rep,name=films" json:"films,omitempty"`
	Species   []string `protobuf:"bytes,11,rep,name=species" json:"species,omitempty"`
	Vehicles  []string `protobuf:"bytes,12,rep,name=vehicles" json:"vehicles,omitempty"`
	Starships []string `protobuf:"bytes,13,rep,name=starships" json:"starships,omitempty"`
	Id        string   `protobuf:"bytes,14,opt,name=id" json:"id,omitempty"`
}

func (m *Person) Reset()                    { *m = Person{} }
func (m *Person) String() string            { return proto1.CompactTextString(m) }
func (*Person) ProtoMessage()               {}
func (*Person) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{25} }

func (m *Person) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Person) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Person) GetMass() float32 {
	if m != nil {
		return m.Mass
	}
	return 0
}

func (m *Person) GetHairColor() string {
	if m != nil {
		return m.HairColor
	}
	return ""
}

func (m *Person) GetSkinColor() string {
	if m != nil {
		return m.SkinColor
	}
	return ""
}

func (m *Person) GetEyeColor() string {
	if m != nil {
		return m.EyeColor
	}
	return ""
}

func (m *Person) GetBirthYear() string {
	if m != nil {
		return m.BirthYear
	}
	return ""
}

func (m *Person) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *Person) GetHomeworld() string {
	if m != nil {
		return m.Homeworld
	}
	return ""
}

func (m *Person) GetFilms() []string {
	if m != nil {
		return m.Films
	}
	return nil
}

func (m *Person) GetSpecies() []string {
	if m != nil {
		return m.Species
	}
	return nil
}

func (m *Person) GetVehicles() []string {
	if m != nil {
		return m.Vehicles
	}
	return nil
}

func (m *Person) GetStarships() []string {
	if m != nil {
		return m.Starships
	}
	return nil
}

func (m *Person) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetPersonRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetPersonRequest) Reset()                    { *m = GetPersonRequest{} }
func (m *GetPersonRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetPersonRequest) ProtoMessage()               {}
func (*GetPersonRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{26} }

func (m *GetPersonRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetPersonResponse struct {
	Person *Person `protobuf:"bytes,1,opt,name=person" json:"person,omitempty"`
}

func (m *GetPersonResponse) Reset()                    { *m = GetPersonResponse{} }
func (m *GetPersonResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetPersonResponse) ProtoMessage()               {}
func (*GetPersonResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{27} }

func (m *GetPersonResponse) GetPerson() *Person {
	if m != nil {
		return m.Person
	}
	return nil
}

type ListPeopleRequest struct {
}

func (m *ListPeopleRequest) Reset()                    { *m = ListPeopleRequest{} }
func (m *ListPeopleRequest) String() string            { return proto1.CompactTextString(m) }
func (*ListPeopleRequest) ProtoMessage()               {}
func (*ListPeopleRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{28} }

type ListPeopleResponse struct {
	People []*Person `protobuf:"bytes,1,rep,name=people" json:"people,omitempty"`
}

func (m *ListPeopleResponse) Reset()                    { *m = ListPeopleResponse{} }
func (m *ListPeopleResponse) String() string            { return proto1.CompactTextString(m) }
func (*ListPeopleResponse) ProtoMessage()               {}
func (*ListPeopleResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{29} }

func (m *ListPeopleResponse) GetPeople() []*Person {
	if m != nil {
		return m.People
	}
	return nil
}

func init() {
	proto1.RegisterType((*Film)(nil), "swapi.v1.Film")
	proto1.RegisterType((*GetFilmRequest)(nil), "swapi.v1.GetFilmRequest")
	proto1.RegisterType((*GetFilmResponse)(nil), "swapi.v1.GetFilmResponse")
	proto1.RegisterType((*ListFilmsRequest)(nil), "swapi.v1.ListFilmsRequest")
	proto1.RegisterType((*ListFilmsResponse)(nil), "swapi.v1.ListFilmsResponse")
	proto1.RegisterType((*Vehicle)(nil), "swapi.v1.Vehicle")
	proto1.RegisterType((*GetVehicleRequest)(nil), "swapi.v1.GetVehicleRequest")
	proto1.RegisterType((*GetVehicleResponse)(nil), "swapi.v1.GetVehicleResponse")
	proto1.RegisterType((*ListVehiclesRequest)(nil), "swapi.v1.ListVehiclesRequest")
	proto1.RegisterType((*ListVehiclesResponse)(nil), "swapi.v1.ListVehiclesResponse")
	proto1.RegisterType((*Starship)(nil), "swapi.v1.Starship")
	proto1.RegisterType((*GetStarshipRequest)(nil), "swapi.v1.GetStarshipRequest")
	proto1.RegisterType((*GetStarshipResponse)(nil), "swapi.v1.GetStarshipResponse")
	proto1.RegisterType((*ListStarshipsRequest)(nil), "swapi.v1.ListStarshipsRequest")
	proto1.RegisterType((*ListStarshipsResponse)(nil), "swapi.v1.ListStarshipsResponse")
	proto1.RegisterType((*Species)(nil), "swapi.v1.Species")
	proto1.RegisterType((*GetSpeciesRequest)(nil), "swapi.v1.GetSpeciesRequest")
	proto1.RegisterType((*GetSpeciesResponse)(nil), "swapi.v1.GetSpeciesResponse")
	proto1.RegisterType((*ListSpeciesRequest)(nil), "swapi.v1.ListSpeciesRequest")
	proto1.RegisterType((*ListSpeciesResponse)(nil), "swapi.v1.ListSpeciesResponse")
	proto1.RegisterType((*Planet)(nil), "swapi.v1.Planet")
	proto1.RegisterType((*GetPlanetRequest)(nil), "swapi.v1.GetPlanetRequest")
	proto1.RegisterType((*GetPlanetResponse)(nil), "swapi.v1.GetPlanetResponse")
	proto1.RegisterType((*ListPlanetsRequest)(nil), "swapi.v1.ListPlanetsRequest")
	proto1.RegisterType((*ListPlanetsResponse)(nil), "swapi.v1.ListPlanetsResponse")
	proto1.RegisterType((*Person)(nil), "swapi.v1.Person")
	proto1.RegisterType((*GetPersonRequest)(nil), "swapi.v1.GetPersonRequest")
	proto1.RegisterType((*GetPersonResponse)(nil), "swapi.v1.GetPersonResponse")
	proto1.RegisterType((*ListPeopleRequest)(nil), "swapi.v1.ListPeopleRequest")
	proto1.RegisterType((*ListPeopleResponse)(nil), "swapi.v1.ListPeopleResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Starwars service

type StarwarsClient interface {
	GetFilm(ctx context.Context, in *GetFilmRequest, opts ...grpc.CallOption) (*GetFilmResponse, error)
	ListFilms(ctx context.Context, in *ListFilmsRequest, opts ...grpc.CallOption) (*ListFilmsResponse, error)
	GetVehicle(ctx context.Context, in *GetVehicleRequest, opts ...grpc.CallOption) (*GetVehicleResponse, error)
	ListVehicles(ctx context.Context, in *ListVehiclesRequest, opts ...grpc.CallOption) (*ListVehiclesResponse, error)
	GetStarship(ctx context.Context, in *GetStarshipRequest, opts ...grpc.CallOption) (*GetStarshipResponse, error)
	ListStarships(ctx context.Context, in *ListStarshipsRequest, opts ...grpc.CallOption) (*ListStarshipsResponse, error)
	GetSpecies(ctx context.Context, in *GetSpeciesRequest, opts ...grpc.CallOption) (*GetSpeciesResponse, error)
	ListSpecies(ctx context.Context, in *ListSpeciesRequest, opts ...grpc.CallOption) (*ListSpeciesResponse, error)
	GetPlanet(ctx context.Context, in *GetPlanetRequest, opts ...grpc.CallOption) (*GetPlanetResponse, error)
	ListPlanets(ctx context.Context, in *ListPlanetsRequest, opts ...grpc.CallOption) (*ListPlanetsResponse, error)
	GetPerson(ctx context.Context, in *GetPersonRequest, opts ...grpc.CallOption) (*GetPersonResponse, error)
	ListPeople(ctx context.Context, in *ListPeopleRequest, opts ...grpc.CallOption) (*ListPeopleResponse, error)
}

type starwarsClient struct {
	cc *grpc.ClientConn
}

func NewStarwarsClient(cc *grpc.ClientConn) StarwarsClient {
	return &starwarsClient{cc}
}

func (c *starwarsClient) GetFilm(ctx context.Context, in *GetFilmRequest, opts ...grpc.CallOption) (*GetFilmResponse, error) {
	out := new(GetFilmResponse)
	err := grpc.Invoke(ctx, "/swapi.v1.Starwars/GetFilm", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *starwarsClient) ListFilms(ctx context.Context, in *ListFilmsRequest, opts ...grpc.CallOption) (*ListFilmsResponse, error) {
	out := new(ListFilmsResponse)
	err := grpc.Invoke(ctx, "/swapi.v1.Starwars/ListFilms", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *starwarsClient) GetVehicle(ctx context.Context, in *GetVehicleRequest, opts ...grpc.CallOption) (*GetVehicleResponse, error) {
	out := new(GetVehicleResponse)
	err := grpc.Invoke(ctx, "/swapi.v1.Starwars/GetVehicle", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *starwarsClient) ListVehicles(ctx context.Context, in *ListVehiclesRequest, opts ...grpc.CallOption) (*ListVehiclesResponse, error) {
	out := new(ListVehiclesResponse)
	err := grpc.Invoke(ctx, "/swapi.v1.Starwars/ListVehicles", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *starwarsClient) GetStarship(ctx context.Context, in *GetStarshipRequest, opts ...grpc.CallOption) (*GetStarshipResponse, error) {
	out := new(GetStarshipResponse)
	err := grpc.Invoke(ctx, "/swapi.v1.Starwars/GetStarship", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *starwarsClient) ListStarships(ctx context.Context, in *ListStarshipsRequest, opts ...grpc.CallOption) (*ListStarshipsResponse, error) {
	out := new(ListStarshipsResponse)
	err := grpc.Invoke(ctx, "/swapi.v1.Starwars/ListStarships", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *starwarsClient) GetSpecies(ctx context.Context, in *GetSpeciesRequest, opts ...grpc.CallOption) (*GetSpeciesResponse, error) {
	out := new(GetSpeciesResponse)
	err := grpc.Invoke(ctx, "/swapi.v1.Starwars/GetSpecies", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *starwarsClient) ListSpecies(ctx context.Context, in *ListSpeciesRequest, opts ...grpc.CallOption) (*ListSpeciesResponse, error) {
	out := new(ListSpeciesResponse)
	err := grpc.Invoke(ctx, "/swapi.v1.Starwars/ListSpecies", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *starwarsClient) GetPlanet(ctx context.Context, in *GetPlanetRequest, opts ...grpc.CallOption) (*GetPlanetResponse, error) {
	out := new(GetPlanetResponse)
	err := grpc.Invoke(ctx, "/swapi.v1.Starwars/GetPlanet", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *starwarsClient) ListPlanets(ctx context.Context, in *ListPlanetsRequest, opts ...grpc.CallOption) (*ListPlanetsResponse, error) {
	out := new(ListPlanetsResponse)
	err := grpc.Invoke(ctx, "/swapi.v1.Starwars/ListPlanets", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *starwarsClient) GetPerson(ctx context.Context, in *GetPersonRequest, opts ...grpc.CallOption) (*GetPersonResponse, error) {
	out := new(GetPersonResponse)
	err := grpc.Invoke(ctx, "/swapi.v1.Starwars/GetPerson", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *starwarsClient) ListPeople(ctx context.Context, in *ListPeopleRequest, opts ...grpc.CallOption) (*ListPeopleResponse, error) {
	out := new(ListPeopleResponse)
	err := grpc.Invoke(ctx, "/swapi.v1.Starwars/ListPeople", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Starwars service

type StarwarsServer interface {
	GetFilm(context.Context, *GetFilmRequest) (*GetFilmResponse, error)
	ListFilms(context.Context, *ListFilmsRequest) (*ListFilmsResponse, error)
	GetVehicle(context.Context, *GetVehicleRequest) (*GetVehicleResponse, error)
	ListVehicles(context.Context, *ListVehiclesRequest) (*ListVehiclesResponse, error)
	GetStarship(context.Context, *GetStarshipRequest) (*GetStarshipResponse, error)
	ListStarships(context.Context, *ListStarshipsRequest) (*ListStarshipsResponse, error)
	GetSpecies(context.Context, *GetSpeciesRequest) (*GetSpeciesResponse, error)
	ListSpecies(context.Context, *ListSpeciesRequest) (*ListSpeciesResponse, error)
	GetPlanet(context.Context, *GetPlanetRequest) (*GetPlanetResponse, error)
	ListPlanets(context.Context, *ListPlanetsRequest) (*ListPlanetsResponse, error)
	GetPerson(context.Context, *GetPersonRequest) (*GetPersonResponse, error)
	ListPeople(context.Context, *ListPeopleRequest) (*ListPeopleResponse, error)
}

func RegisterStarwarsServer(s *grpc.Server, srv StarwarsServer) {
	s.RegisterService(&_Starwars_serviceDesc, srv)
}

func _Starwars_GetFilm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFilmRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StarwarsServer).GetFilm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swapi.v1.Starwars/GetFilm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StarwarsServer).GetFilm(ctx, req.(*GetFilmRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Starwars_ListFilms_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListFilmsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StarwarsServer).ListFilms(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swapi.v1.Starwars/ListFilms",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StarwarsServer).ListFilms(ctx, req.(*ListFilmsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Starwars_GetVehicle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVehicleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StarwarsServer).GetVehicle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swapi.v1.Starwars/GetVehicle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StarwarsServer).GetVehicle(ctx, req.(*GetVehicleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Starwars_ListVehicles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListVehiclesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StarwarsServer).ListVehicles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swapi.v1.Starwars/ListVehicles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StarwarsServer).ListVehicles(ctx, req.(*ListVehiclesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Starwars_GetStarship_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStarshipRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StarwarsServer).GetStarship(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swapi.v1.Starwars/GetStarship",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StarwarsServer).GetStarship(ctx, req.(*GetStarshipRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Starwars_ListStarships_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListStarshipsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StarwarsServer).ListStarships(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swapi.v1.Starwars/ListStarships",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StarwarsServer).ListStarships(ctx, req.(*ListStarshipsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Starwars_GetSpecies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSpeciesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StarwarsServer).GetSpecies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swapi.v1.Starwars/GetSpecies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StarwarsServer).GetSpecies(ctx, req.(*GetSpeciesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Starwars_ListSpecies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSpeciesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StarwarsServer).ListSpecies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swapi.v1.Starwars/ListSpecies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StarwarsServer).ListSpecies(ctx, req.(*ListSpeciesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Starwars_GetPlanet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPlanetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StarwarsServer).GetPlanet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swapi.v1.Starwars/GetPlanet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StarwarsServer).GetPlanet(ctx, req.(*GetPlanetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Starwars_ListPlanets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPlanetsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StarwarsServer).ListPlanets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swapi.v1.Starwars/ListPlanets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StarwarsServer).ListPlanets(ctx, req.(*ListPlanetsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Starwars_GetPerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPersonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StarwarsServer).GetPerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swapi.v1.Starwars/GetPerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StarwarsServer).GetPerson(ctx, req.(*GetPersonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Starwars_ListPeople_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPeopleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StarwarsServer).ListPeople(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/swapi.v1.Starwars/ListPeople",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StarwarsServer).ListPeople(ctx, req.(*ListPeopleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Starwars_serviceDesc = grpc.ServiceDesc{
	ServiceName: "swapi.v1.Starwars",
	HandlerType: (*StarwarsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFilm",
			Handler:    _Starwars_GetFilm_Handler,
		},
		{
			MethodName: "ListFilms",
			Handler:    _Starwars_ListFilms_Handler,
		},
		{
			MethodName: "GetVehicle",
			Handler:    _Starwars_GetVehicle_Handler,
		},
		{
			MethodName: "ListVehicles",
			Handler:    _Starwars_ListVehicles_Handler,
		},
		{
			MethodName: "GetStarship",
			Handler:    _Starwars_GetStarship_Handler,
		},
		{
			MethodName: "ListStarships",
			Handler:    _Starwars_ListStarships_Handler,
		},
		{
			MethodName: "GetSpecies",
			Handler:    _Starwars_GetSpecies_Handler,
		},
		{
			MethodName: "ListSpecies",
			Handler:    _Starwars_ListSpecies_Handler,
		},
		{
			MethodName: "GetPlanet",
			Handler:    _Starwars_GetPlanet_Handler,
		},
		{
			MethodName: "ListPlanets",
			Handler:    _Starwars_ListPlanets_Handler,
		},
		{
			MethodName: "GetPerson",
			Handler:    _Starwars_GetPerson_Handler,
		},
		{
			MethodName: "ListPeople",
			Handler:    _Starwars_ListPeople_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "swapi.proto",
}

func init() { proto1.RegisterFile("swapi.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 1666 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x98, 0xcd, 0x6e, 0xdc, 0xc8,
	0x11, 0xc7, 0xa1, 0x19, 0xcd, 0x07, 0x7b, 0x3e, 0x24, 0xb5, 0x3e, 0x4c, 0x8f, 0x24, 0x5b, 0xa1,
	0x1d, 0x47, 0x89, 0x11, 0x29, 0x76, 0x92, 0x43, 0x0e, 0x09, 0x60, 0x2b, 0x8e, 0x63, 0xc0, 0x07,
	0x61, 0x0c, 0x24, 0x48, 0x90, 0x60, 0xd0, 0x22, 0x5b, 0x9c, 0x46, 0x38, 0x24, 0xd3, 0xcd, 0x91,
	0x2c, 0x04, 0xb9, 0xe4, 0x11, 0x92, 0xe7, 0xc8, 0xd3, 0xec, 0x69, 0x2f, 0xbb, 0x97, 0x7d, 0x81,
	0xdd, 0x27, 0x58, 0x74, 0x75, 0x35, 0xbf, 0x86, 0x23, 0xfb, 0xb4, 0x27, 0xa9, 0xff, 0x55, 0xec,
	0xea, 0x66, 0xff, 0xba, 0xaa, 0x38, 0x64, 0xa0, 0x6e, 0x59, 0x2a, 0xce, 0x52, 0x99, 0x64, 0x09,
	0xed, 0x9b, 0xc1, 0xcd, 0x8b, 0xc9, 0x51, 0x98, 0x24, 0x61, 0xc4, 0xcf, 0x59, 0x2a, 0xce, 0x59,
	0x1c, 0x27, 0x19, 0xcb, 0x44, 0x12, 0x2b, 0xe3, 0xe7, 0x7d, 0xd9, 0x22, 0x9b, 0x7f, 0x10, 0xd1,
	0x82, 0xee, 0x91, 0x4e, 0x26, 0xb2, 0x88, 0xbb, 0x1b, 0x27, 0x1b, 0xa7, 0xce, 0xd4, 0x0c, 0xe8,
	0x31, 0x21, 0x3c, 0x15, 0x2a, 0x09, 0xf8, 0x4c, 0x04, 0x6e, 0xeb, 0x64, 0xe3, 0xb4, 0x33, 0x75,
	0x50, 0x79, 0x17, 0xd0, 0x27, 0x64, 0x94, 0xa4, 0x3c, 0x16, 0x71, 0x38, 0xf3, 0x25, 0xbb, 0x8d,
	0xdc, 0x36, 0x3c, 0x3c, 0x44, 0xf1, 0x42, 0x6b, 0x74, 0x42, 0xfa, 0x81, 0x90, 0xdc, 0xcf, 0x12,
	0xe9, 0x6e, 0x82, 0x3d, 0x1f, 0x6b, 0x5b, 0x2a, 0x93, 0x60, 0xe9, 0x73, 0xe9, 0x76, 0x8c, 0xcd,
	0x8e, 0xe9, 0x8f, 0xc8, 0x50, 0xf2, 0x88, 0x33, 0xc5, 0x67, 0x01, 0xcb, 0xb8, 0xdb, 0x05, 0xfb,
	0x00, 0xb5, 0xdf, 0xb3, 0x8c, 0xd3, 0x47, 0x84, 0xf8, 0x73, 0x26, 0x99, 0x9f, 0x71, 0xa9, 0xdc,
	0xde, 0x49, 0xfb, 0xd4, 0x99, 0x96, 0x14, 0xea, 0x92, 0x5e, 0x1a, 0xb1, 0x98, 0x67, 0xca, 0xed,
	0x83, 0xd1, 0x0e, 0xe9, 0x11, 0x71, 0x54, 0xc6, 0xa4, 0x9a, 0x8b, 0x54, 0xb9, 0x0e, 0xd8, 0x0a,
	0x41, 0x2f, 0xeb, 0x86, 0xcf, 0x85, 0x1f, 0x71, 0xe5, 0x12, 0x30, 0xe6, 0x63, 0x3d, 0xa7, 0x4a,
	0xb9, 0x2f, 0xb8, 0x72, 0x07, 0x66, 0x4e, 0x1c, 0xd2, 0x31, 0x69, 0x89, 0xc0, 0x1d, 0xc2, 0x32,
	0x5b, 0x22, 0xf0, 0x4e, 0xc8, 0xf8, 0x2d, 0xcf, 0xf4, 0xdb, 0x9d, 0xf2, 0x7f, 0x2e, 0xb9, 0xca,
	0xd0, 0x63, 0x23, 0xf7, 0xf8, 0x35, 0xd9, 0xca, 0x3d, 0x54, 0x9a, 0xc4, 0x8a, 0x53, 0x8f, 0x6c,
	0x5e, 0x8b, 0x68, 0x01, 0x4e, 0x83, 0x97, 0xe3, 0x33, 0x7b, 0x8e, 0x67, 0xe0, 0x05, 0x36, 0x8f,
	0x92, 0xed, 0xf7, 0x42, 0xc1, 0x73, 0x0a, 0xa7, 0xf6, 0x7e, 0x43, 0x76, 0x4a, 0x1a, 0x4e, 0xf6,
	0x94, 0x74, 0xf4, 0x03, 0xca, 0xdd, 0x38, 0x69, 0x37, 0xcc, 0x66, 0x8c, 0xde, 0xff, 0xdb, 0xa4,
	0xf7, 0x27, 0xb3, 0x3d, 0x4a, 0xc9, 0x66, 0xcc, 0x16, 0x96, 0x02, 0xf8, 0x5f, 0xa3, 0xb1, 0x48,
	0x02, 0x1e, 0xc1, 0xf9, 0x3b, 0x53, 0x33, 0xa0, 0x1e, 0x19, 0x2e, 0x58, 0xbc, 0xbc, 0x66, 0x7e,
	0xb6, 0x94, 0x5c, 0xda, 0xa3, 0x2f, 0x6b, 0xf4, 0x19, 0xd9, 0xf2, 0x13, 0x95, 0xcd, 0x44, 0x3c,
	0xf3, 0x25, 0x0f, 0x44, 0xa6, 0x80, 0x80, 0xce, 0x74, 0xa4, 0xe5, 0x77, 0xf1, 0x85, 0x11, 0xe9,
	0x01, 0xe9, 0x46, 0x3c, 0x0e, 0xb3, 0x39, 0x40, 0xd0, 0x9a, 0xe2, 0x88, 0xfe, 0x8a, 0x1c, 0x2c,
	0xd8, 0xc7, 0x19, 0xcb, 0x16, 0x89, 0x4a, 0xe7, 0x5c, 0x6a, 0xd0, 0x54, 0xca, 0x79, 0x00, 0x30,
	0x74, 0xa6, 0x7b, 0x0b, 0xf6, 0xf1, 0x55, 0xc9, 0xf8, 0x41, 0xdb, 0xf4, 0x1e, 0x7c, 0xc9, 0x6f,
	0xdd, 0x1e, 0xf8, 0xc0, 0xff, 0x9a, 0x94, 0x94, 0x29, 0xc5, 0xe3, 0x50, 0x93, 0xd2, 0x07, 0x4b,
	0x49, 0xa1, 0x3f, 0x26, 0x63, 0x9f, 0xc9, 0x30, 0x99, 0xf9, 0x2c, 0x65, 0xbe, 0xc8, 0xee, 0x5c,
	0x07, 0x17, 0xaa, 0xd5, 0x0b, 0x14, 0xe9, 0x09, 0x19, 0xf8, 0x49, 0xac, 0x96, 0x0b, 0x76, 0x65,
	0xd8, 0x00, 0x24, 0x4b, 0x92, 0xbe, 0x12, 0x88, 0xca, 0xcc, 0x8f, 0x98, 0xd2, 0x90, 0xc0, 0x7b,
	0x41, 0xf1, 0x42, 0x6b, 0x7a, 0xbf, 0xa9, 0x88, 0x92, 0x4c, 0xb9, 0x43, 0x40, 0x08, 0x47, 0xfa,
	0x4d, 0x9b, 0xf3, 0x1a, 0x81, 0x6c, 0x06, 0x48, 0xcd, 0x38, 0xa7, 0xe6, 0x09, 0xd9, 0x79, 0xcb,
	0x33, 0x3c, 0xb1, 0x75, 0x68, 0xbd, 0x22, 0xb4, 0xec, 0x84, 0x40, 0x3c, 0x27, 0x3d, 0x5c, 0x08,
	0x02, 0xb6, 0x53, 0x20, 0x61, 0x7d, 0xad, 0x87, 0xb7, 0x4f, 0x76, 0x35, 0x52, 0xa8, 0xe7, 0xa4,
	0xbd, 0x21, 0x7b, 0x55, 0x19, 0xe7, 0xfe, 0x79, 0xe9, 0xd2, 0x18, 0xde, 0x1a, 0x26, 0xcf, 0x5d,
	0xbc, 0x6f, 0xdb, 0xa4, 0xff, 0x01, 0x6f, 0xdc, 0x0f, 0x83, 0x5d, 0xfb, 0x73, 0xb1, 0xb3, 0x00,
	0x75, 0xd7, 0x02, 0xd4, 0xfb, 0x0c, 0x80, 0xfa, 0x18, 0xf2, 0x3e, 0x80, 0x9c, 0x55, 0x80, 0x9e,
	0x93, 0x9d, 0xf9, 0x5d, 0xca, 0x65, 0x20, 0xc5, 0x0d, 0x9f, 0x49, 0x96, 0x89, 0x38, 0x04, 0xd0,
	0x5a, 0xd3, 0xed, 0xc2, 0x30, 0x05, 0x5d, 0xaf, 0x74, 0x11, 0x46, 0x19, 0x40, 0xd6, 0x99, 0xc2,
	0xff, 0x7a, 0x25, 0x36, 0x93, 0x21, 0x82, 0x26, 0x25, 0x8d, 0xac, 0x5a, 0x67, 0x70, 0xd4, 0xcc,
	0xe0, 0x78, 0x95, 0xc1, 0x2d, 0x8b, 0xd7, 0x3d, 0x37, 0x73, 0x1b, 0xb6, 0xdd, 0x78, 0x33, 0xbd,
	0xa7, 0x00, 0xa5, 0x3d, 0xf5, 0x75, 0xe8, 0xbe, 0x21, 0xbb, 0x15, 0x2f, 0xe4, 0xeb, 0x8c, 0xf4,
	0xed, 0x0e, 0x10, 0x5e, 0x5a, 0xf0, 0x95, 0x7b, 0xe7, 0x3e, 0xde, 0x81, 0xe1, 0xd4, 0x5a, 0x72,
	0x7e, 0xdf, 0x91, 0xfd, 0x9a, 0x8e, 0x01, 0x7e, 0x51, 0xae, 0x09, 0x86, 0xe0, 0xa6, 0x08, 0x85,
	0x93, 0xf7, 0xdf, 0x36, 0xe9, 0x7d, 0xc0, 0xec, 0xdf, 0x84, 0xf0, 0x33, 0x32, 0x86, 0x13, 0x10,
	0xd7, 0xc2, 0x87, 0xb2, 0x8b, 0x2c, 0xd7, 0x54, 0x4d, 0x45, 0xc0, 0x95, 0x08, 0x63, 0xe3, 0x64,
	0x98, 0x2e, 0x4b, 0xfa, 0x50, 0xd9, 0x0d, 0x97, 0x2c, 0xe4, 0xb3, 0x39, 0x17, 0xe1, 0x3c, 0xb3,
	0x89, 0x14, 0xd5, 0x3f, 0x82, 0x48, 0x1f, 0x93, 0x81, 0xfa, 0x87, 0xc6, 0x3e, 0x89, 0x12, 0xa9,
	0xb0, 0xa4, 0x12, 0x2d, 0x5d, 0x80, 0x02, 0x05, 0xfd, 0x8e, 0x5b, 0xbb, 0x29, 0xa9, 0x0e, 0xbf,
	0xe3, 0x68, 0xfe, 0x29, 0xd9, 0xb6, 0x61, 0x22, 0x71, 0xcd, 0x55, 0xca, 0x62, 0x64, 0x7d, 0x0b,
	0xf5, 0xf7, 0x28, 0xeb, 0x0a, 0x3a, 0x4f, 0x16, 0xfc, 0x36, 0x91, 0x51, 0x00, 0xac, 0x3b, 0xd3,
	0x42, 0xd0, 0x15, 0x34, 0x62, 0x71, 0xb8, 0x64, 0x21, 0x47, 0xc8, 0xf3, 0x31, 0x90, 0xc7, 0x93,
	0x34, 0xe2, 0x58, 0x5b, 0x71, 0x54, 0x90, 0x37, 0x58, 0x25, 0x2f, 0xaf, 0xaa, 0x7a, 0x8b, 0x73,
	0x26, 0xa4, 0xdd, 0xc2, 0xc8, 0x6c, 0x51, 0x4b, 0x66, 0x0f, 0x98, 0x1e, 0xf1, 0x58, 0xee, 0x4f,
	0x8f, 0xb9, 0x53, 0x91, 0x1e, 0x6d, 0x6d, 0x5f, 0x49, 0x8f, 0xd6, 0xd7, 0x7a, 0x78, 0x7b, 0x84,
	0x02, 0x47, 0x95, 0x40, 0xde, 0x6b, 0x93, 0x34, 0xef, 0x9d, 0xb9, 0xfd, 0x89, 0x99, 0xbf, 0x6e,
	0x91, 0xee, 0x25, 0x34, 0x2a, 0x8d, 0x54, 0xfd, 0x84, 0x6c, 0x49, 0x6c, 0xe3, 0x66, 0x29, 0x97,
	0x22, 0xb1, 0x9d, 0xd9, 0xd8, 0xca, 0x97, 0xa0, 0x6a, 0x68, 0x12, 0x79, 0x25, 0x32, 0x16, 0x59,
	0xbf, 0xb6, 0x81, 0x06, 0x55, 0x74, 0x83, 0x06, 0x8d, 0x2d, 0x78, 0xc6, 0x25, 0x52, 0x95, 0x8f,
	0x75, 0xb7, 0xe3, 0x47, 0x62, 0xa1, 0xfb, 0x2f, 0x03, 0x93, 0x1d, 0x6a, 0x4b, 0x28, 0xd9, 0x8d,
	0xce, 0x74, 0x5d, 0xc8, 0x4e, 0x76, 0xa8, 0x2d, 0x19, 0x97, 0x92, 0x09, 0xc3, 0x8e, 0x33, 0xb5,
	0x43, 0x5d, 0x1c, 0xd5, 0x52, 0x5e, 0x33, 0x9f, 0xcf, 0x6e, 0x99, 0x0e, 0xd7, 0x87, 0x27, 0x87,
	0x28, 0xfe, 0x59, 0x6b, 0x90, 0x69, 0x93, 0x74, 0x19, 0x99, 0xbb, 0xe0, 0x40, 0x3a, 0x29, 0x29,
	0x1a, 0x3c, 0xc9, 0x95, 0x08, 0x78, 0x9c, 0xd9, 0xee, 0xac, 0x10, 0x3e, 0x0f, 0x22, 0xcf, 0x23,
	0xdb, 0x6f, 0x79, 0x66, 0xde, 0xf1, 0x3a, 0x44, 0x7e, 0x0b, 0x1c, 0x59, 0x1f, 0x3c, 0xc7, 0x53,
	0xd2, 0x35, 0x2d, 0x24, 0x02, 0xb2, 0x5d, 0x1c, 0x23, 0x7a, 0xa2, 0xdd, 0xe2, 0x61, 0xd4, 0x1c,
	0x8f, 0x57, 0x06, 0x8f, 0x5c, 0xc5, 0x69, 0x7f, 0x46, 0x7a, 0x92, 0xab, 0x65, 0x94, 0x59, 0x3c,
	0x56, 0xe7, 0xb5, 0x0e, 0xde, 0x77, 0x9a, 0x0e, 0x2e, 0x55, 0x12, 0x37, 0xd2, 0x71, 0x40, 0xba,
	0x98, 0x21, 0x0c, 0x14, 0x38, 0x82, 0x52, 0xa1, 0x8b, 0x41, 0x1b, 0x5e, 0x39, 0xfc, 0xaf, 0xb3,
	0x41, 0x71, 0x97, 0xb0, 0x39, 0x77, 0xf2, 0xab, 0xa4, 0xcd, 0x45, 0x36, 0xc1, 0xf3, 0x77, 0xf2,
	0x64, 0x42, 0x0f, 0x89, 0x93, 0xe7, 0x12, 0x4c, 0x25, 0x7d, 0x9b, 0x4a, 0xf4, 0xb3, 0x57, 0x42,
	0x66, 0xf3, 0xd9, 0x1d, 0x67, 0x12, 0x39, 0x70, 0x40, 0xf9, 0x0b, 0x67, 0x52, 0xaf, 0x32, 0xe4,
	0x71, 0x80, 0x08, 0x38, 0x53, 0x1c, 0x55, 0xb3, 0x8a, 0x53, 0xcf, 0x2a, 0xf9, 0xe1, 0x92, 0xf2,
	0xe1, 0xae, 0xef, 0xc8, 0xcb, 0x7d, 0xfc, 0xb0, 0xd6, 0xc7, 0x57, 0xbe, 0x00, 0x46, 0xf5, 0x2f,
	0x80, 0x7a, 0xcf, 0x85, 0xc0, 0xc0, 0x6b, 0xff, 0x04, 0x30, 0xe8, 0x53, 0x02, 0x06, 0x94, 0x06,
	0x60, 0x8c, 0x27, 0xda, 0xbd, 0x5d, 0xd3, 0xc1, 0x5f, 0x42, 0x32, 0xb4, 0xbc, 0xfc, 0x0e, 0x29,
	0x42, 0xb1, 0x3c, 0x29, 0x64, 0xd0, 0x55, 0x5a, 0xf2, 0x49, 0xb5, 0xfd, 0xe5, 0x57, 0x8e, 0xe9,
	0xb2, 0x6e, 0x99, 0x54, 0xf4, 0x6f, 0xa4, 0x87, 0x9f, 0x1b, 0xd4, 0x2d, 0x9e, 0xa8, 0x7e, 0xa3,
	0x4c, 0x1e, 0x36, 0x58, 0x4c, 0x58, 0xef, 0xe8, 0x3f, 0x5f, 0x7c, 0xf3, 0xbf, 0xd6, 0x01, 0xdd,
	0x3b, 0x07, 0x97, 0xf3, 0x9b, 0x17, 0xe7, 0x70, 0x02, 0xe7, 0xff, 0x12, 0xc1, 0xbf, 0xe9, 0xdf,
	0x89, 0x93, 0x7f, 0x81, 0xd0, 0x49, 0x31, 0x4b, 0xfd, 0x53, 0x65, 0x72, 0xd8, 0x68, 0xc3, 0x18,
	0x0f, 0x20, 0xc6, 0x0e, 0xdd, 0xaa, 0xc5, 0xa0, 0x73, 0x42, 0x8a, 0x86, 0x96, 0x1e, 0x56, 0x56,
	0x59, 0xed, 0x85, 0x27, 0x47, 0xcd, 0x46, 0x8c, 0xf0, 0x18, 0x22, 0x3c, 0xa4, 0x0f, 0x8a, 0x08,
	0x16, 0x0a, 0xb3, 0x11, 0x41, 0x86, 0xe5, 0x06, 0x97, 0x1e, 0x57, 0xd7, 0x5b, 0xeb, 0x87, 0x27,
	0x8f, 0xd6, 0x99, 0x31, 0xde, 0x04, 0xe2, 0xed, 0x51, 0xba, 0x1a, 0x8f, 0x46, 0x64, 0x50, 0x6a,
	0x75, 0x68, 0x75, 0xe1, 0xb5, 0x3e, 0x69, 0x72, 0xbc, 0xc6, 0x8a, 0x71, 0x4e, 0x20, 0xce, 0x84,
	0xba, 0x45, 0x9c, 0x9c, 0x67, 0xb3, 0xb1, 0x05, 0x19, 0x55, 0x3a, 0x1f, 0x5a, 0x5b, 0x7a, 0xbd,
	0x55, 0x9a, 0x3c, 0x5e, 0x6b, 0xc7, 0x98, 0x87, 0x10, 0x73, 0x9f, 0xee, 0x36, 0xc4, 0xa4, 0x21,
	0x9c, 0x98, 0xed, 0x8f, 0xaa, 0x27, 0x56, 0xad, 0x9a, 0xb5, 0x13, 0xab, 0x15, 0x4f, 0xef, 0x11,
	0x44, 0x71, 0xe9, 0x41, 0x29, 0x8a, 0x71, 0x31, 0xfb, 0xe2, 0x64, 0x50, 0xaa, 0xb9, 0xe5, 0xb7,
	0xb8, 0x5a, 0xa0, 0x27, 0xc7, 0x6b, 0xac, 0x18, 0xeb, 0x21, 0xc4, 0xda, 0xa5, 0x3b, 0x2b, 0xb1,
	0x68, 0x40, 0x9c, 0xbc, 0x20, 0x94, 0x01, 0xaf, 0x57, 0x92, 0xc9, 0x61, 0xa3, 0x6d, 0xfd, 0x66,
	0xf0, 0x47, 0x89, 0xca, 0x66, 0x2e, 0xed, 0x0f, 0x15, 0xd5, 0xe5, 0x56, 0xcb, 0x49, 0x7d, 0x33,
	0xb5, 0xb2, 0xd2, 0xb4, 0x19, 0xfb, 0x03, 0x88, 0x6f, 0x36, 0x63, 0xea, 0x48, 0x6d, 0x33, 0xe5,
	0x2c, 0x57, 0xdf, 0x4c, 0x25, 0xbb, 0x79, 0xc7, 0x10, 0xe0, 0x01, 0xdd, 0x2f, 0x05, 0x80, 0xc4,
	0x63, 0xf6, 0xc2, 0x08, 0x29, 0xb2, 0x17, 0xad, 0xdd, 0xfb, 0x4a, 0xa2, 0x9b, 0x1c, 0x35, 0x1b,
	0x31, 0x8e, 0x0b, 0x71, 0x28, 0xdd, 0xae, 0xc7, 0x79, 0xdd, 0xfb, 0x6b, 0x07, 0x7e, 0xc9, 0xba,
	0xea, 0xc2, 0x9f, 0x5f, 0x7e, 0x1f, 0x00, 0x00, 0xff, 0xff, 0x40, 0x22, 0x82, 0x79, 0x07, 0x13,
	0x00, 0x00,
}
